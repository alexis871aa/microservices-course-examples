package main

import (
	"context"
	"fmt"
	"net"
	"time"

	"go.uber.org/zap"
	"google.golang.org/grpc"
	"google.golang.org/grpc/credentials/insecure"
	"google.golang.org/grpc/reflection"
	"google.golang.org/protobuf/types/known/emptypb"
	"google.golang.org/protobuf/types/known/timestamppb"
	"google.golang.org/protobuf/types/known/wrapperspb"

	"github.com/olezhek28/microservices-course-examples/week_7/metrics/platform/pkg/logger"
	ufoV1 "github.com/olezhek28/microservices-course-examples/week_7/metrics/shared/pkg/proto/ufo/v1"
	"github.com/olezhek28/microservices-course-examples/week_7/metrics/ufo/internal/interceptor"
	ufoMetrics "github.com/olezhek28/microservices-course-examples/week_7/metrics/ufo/internal/metrics"
)

// ufoServer –ø—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è UFO gRPC —Å–µ—Ä–≤–∏—Å–∞
type ufoServer struct {
	ufoV1.UnimplementedUFOServiceServer
}

// Create —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ù–õ–û
func (s *ufoServer) Create(ctx context.Context, req *ufoV1.CreateRequest) (*ufoV1.CreateResponse, error) {
	logger.Info(ctx, "Create UFO sighting called",
		zap.String("location", req.Info.Location),
		zap.String("description", req.Info.Description))

	// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
	ufoMetrics.RequestsTotal.WithLabelValues("Create", "success").Inc()
	ufoMetrics.SightingsTotal.Inc()

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π UUID
	return &ufoV1.CreateResponse{
		Uuid: "12345678-1234-1234-1234-123456789abc",
	}, nil
}

// Get –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ù–õ–û –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
func (s *ufoServer) Get(ctx context.Context, req *ufoV1.GetRequest) (*ufoV1.GetResponse, error) {
	logger.Info(ctx, "Get UFO sighting called", zap.String("uuid", req.Uuid))

	// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
	ufoMetrics.RequestsTotal.WithLabelValues("Get", "success").Inc()

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
	return &ufoV1.GetResponse{
		Sighting: &ufoV1.Sighting{
			Uuid: req.Uuid,
			Info: &ufoV1.SightingInfo{
				ObservedAt:      timestamppb.Now(),
				Location:        "–ú–æ—Å–∫–≤–∞",
				Description:     "–¢—Ä–µ—É–≥–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤ –Ω–µ–±–µ",
				Color:           wrapperspb.String("–∫—Ä–∞—Å–Ω—ã–π"),
				Sound:           wrapperspb.Bool(false),
				DurationSeconds: wrapperspb.Int32(300),
			},
			CreatedAt: timestamppb.Now(),
			UpdatedAt: timestamppb.Now(),
		},
	}, nil
}

// Update –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ù–õ–û
func (s *ufoServer) Update(ctx context.Context, req *ufoV1.UpdateRequest) (*emptypb.Empty, error) {
	logger.Info(ctx, "Update UFO sighting called", zap.String("uuid", req.Uuid))

	// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
	ufoMetrics.RequestsTotal.WithLabelValues("Update", "success").Inc()

	return &emptypb.Empty{}, nil
}

// Delete –≤—ã–ø–æ–ª–Ω—è–µ—Ç –º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –ù–õ–û
func (s *ufoServer) Delete(ctx context.Context, req *ufoV1.DeleteRequest) (*emptypb.Empty, error) {
	logger.Info(ctx, "Delete UFO sighting called", zap.String("uuid", req.Uuid))

	// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
	ufoMetrics.RequestsTotal.WithLabelValues("Delete", "success").Inc()

	return &emptypb.Empty{}, nil
}

// AnalyzeSighting –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ù–õ–û
func (s *ufoServer) AnalyzeSighting(ctx context.Context, req *ufoV1.AnalyzeSightingRequest) (*ufoV1.AnalyzeSightingResponse, error) {
	logger.Info(ctx, "AnalyzeSighting called", zap.String("uuid", req.Uuid))

	// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
	ufoMetrics.RequestsTotal.WithLabelValues("AnalyzeSighting", "success").Inc()
	ufoMetrics.AnalysisRequestsTotal.Inc()

	// –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞
	start := time.Now()
	defer func() {
		duration := time.Since(start)
		ufoMetrics.AnalysisDuration.Observe(duration.Seconds())
	}()

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
	return &ufoV1.AnalyzeSightingResponse{
		AnalysisResult:  "–û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é 0.75",
		Classification:  "unknown",
		ConfidenceScore: 0.75,
	}, nil
}

func main() {
	ctx := context.Background()

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
	err := logger.Init("info", false)
	if err != nil {
		panic(fmt.Sprintf("failed to init logger: %v", err))
	}

	// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è UFO –º–µ—Ç—Ä–∏–∫
	ufoMetrics.RegisterMetrics()

	// –°–æ–∑–¥–∞–Ω–∏–µ gRPC —Å–µ—Ä–≤–µ—Ä–∞ —Å –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä–æ–º –º–µ—Ç—Ä–∏–∫
	server := grpc.NewServer(
		grpc.Creds(insecure.NewCredentials()),
		grpc.UnaryInterceptor(interceptor.MetricsInterceptor()),
	)

	// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è UFO —Å–µ—Ä–≤–∏—Å–∞
	ufoV1.RegisterUFOServiceServer(server, &ufoServer{})

	// –í–∫–ª—é—á–µ–Ω–∏–µ reflection –¥–ª—è grpcurl
	reflection.Register(server)

	// –°–æ–∑–¥–∞–Ω–∏–µ listener
	listener, err := net.Listen("tcp", ":50051")
	if err != nil {
		panic(fmt.Sprintf("failed to listen: %v", err))
	}

	logger.Info(ctx, "üöÄ UFO gRPC server starting on :50051")

	// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
	if err := server.Serve(listener); err != nil {
		panic(fmt.Sprintf("failed to serve: %v", err))
	}
}
