version: '3'

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
vars:
  GO_VERSION: '1.24'
  GOLANGCI_LINT_VERSION: 'v2.1.5'
  GCI_VERSION: 'v0.13.6'
  GOFUMPT_VERSION: 'v0.8.0'
  BUF_VERSION: '1.53.0'
  PROTOC_GEN_GO_VERSION: 'v1.36.6'
  PROTOC_GEN_GO_GRPC_VERSION: 'v1.5.1'
  GRPCURL_VERSION: 'v1.9.3'
  ENVSUBST_VERSION: 'v1.4.3'

  BIN_DIR: '{{.ROOT_DIR}}/bin'
  GOLANGCI_LINT: '{{.BIN_DIR}}/golangci-lint'
  GCI: '{{.BIN_DIR}}/gci'
  GOFUMPT: '{{.BIN_DIR}}/gofumpt'
  BUF: '{{.BIN_DIR}}/buf'
  PROTOC_GEN_GO: '{{.BIN_DIR}}/protoc-gen-go'
  PROTOC_GEN_GO_GRPC: '{{.BIN_DIR}}/protoc-gen-go-grpc'
  GRPCURL: '{{.BIN_DIR}}/grpcurl'
  ENVSUBST: '{{.BIN_DIR}}/envsubst'
  ENVDIR: '{{.ROOT_DIR}}/deploy/env'
  COMPOSE_DIR: '{{.ROOT_DIR}}/deploy/compose'

  MODULES: ufo platform analysis classification
  SERVICES: core,ufo
  GRPC_SERVER_ADDR: 'localhost:50051'

tasks:
  install-formatters:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã gci –∏ gofumpt –≤ ./bin"
    cmds:
      - |
        [ -f {{.GOFUMPT}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gofumpt {{.GOFUMPT_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install mvdan.cc/gofumpt@{{.GOFUMPT_VERSION}}
        }
        [ -f {{.GCI}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gci {{.GCI_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/daixiang0/gci@{{.GCI_VERSION}}
        }
    status:
      - test -x {{.GOFUMPT}}
      - test -x {{.GCI}}

  format:
    desc: "–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç gofumpt + gci, –∏—Å–∫–ª—é—á–∞—è mocks"
    deps: [ install-formatters ]
    cmds:
      - |
        echo "üßº –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ gofumpt ..."
        
        for module in {{.MODULES}}; do
          if [ -d "$module" ]; then
            echo "üßº –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º $module"
            find $module -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GOFUMPT}} -extra -w {} +
          fi
        done
      - |
        echo "üéØ –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã —á–µ—Ä–µ–∑ gci ..."
        
        for module in {{.MODULES}}; do
          if [ -d "$module" ]; then
            echo "üéØ –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ $module"
            find $module -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GCI}} write -s standard -s default -s "prefix(github.com/olezhek28/microservices-course-examples/)" {} +
          fi
        done

  install-golangci-lint:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç golangci-lint –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.GOLANGCI_LINT}} ] || {
          mkdir -p {{.BIN_DIR}}
          echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º golangci-lint {{.GOLANGCI_LINT_VERSION}}..."
          GOBIN={{.BIN_DIR}} go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@{{.GOLANGCI_LINT_VERSION}}
        }
    status:
      - test -x {{.GOLANGCI_LINT}}

  lint:
    desc: "–ó–∞–ø—É—Å–∫–∞–µ—Ç golangci-lint –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"
    deps: [ install-golangci-lint ]
    vars:
      MODULES: '{{.MODULES}}'
      GOLANGCI_LINT: '{{.GOLANGCI_LINT}}'
    cmds:
      - |
        set -e
        ERR=0
        echo "üîç –õ–∏–Ω—Ç–∏–º –≤—Å–µ –º–æ–¥—É–ª–∏ ..."
        for mod in {{.MODULES}}; do
          if [ -d "$mod" ]; then
            echo "üîç –õ–∏–Ω—Ç–∏–º $mod module"
            {{.GOLANGCI_LINT}} run $mod/... --config=.golangci.yml || ERR=1
          fi
        done
        exit $ERR

  deps:update:
    desc: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ go.mod –≤–æ –≤—Å–µ—Ö –º–æ–¥—É–ª—è—Ö"
    cmds:
      - |
        echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ go.work"
        go work sync
        echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ go.mod –≤–æ –≤—Å–µ—Ö –º–æ–¥—É–ª—è—Ö"
        for mod in {{.MODULES}}; do
          if [ -d "$mod" ]; then
            echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ $mod"
            (cd "$mod" && go mod tidy -compat=1.24) || exit 1
          fi
        done

  install-buf:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Buf –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        mkdir -p {{.BIN_DIR}}
        [ -f {{.BUF}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º buf {{.BUF_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/bufbuild/buf/cmd/buf@v{{.BUF_VERSION}}
        }
    status:
      - test -x {{.BUF}}

  proto:install-plugins:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç protoc –ø–ª–∞–≥–∏–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.PROTOC_GEN_GO}} ] || {
          echo 'üì¶ Installing protoc-gen-go...'
          GOBIN={{.BIN_DIR}} go install google.golang.org/protobuf/cmd/protoc-gen-go@{{.PROTOC_GEN_GO_VERSION}}
        }
        [ -f {{.PROTOC_GEN_GO_GRPC}} ] || {
          echo 'üì¶ Installing protoc-gen-go-grpc...'
          GOBIN={{.BIN_DIR}} go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@{{.PROTOC_GEN_GO_GRPC_VERSION}}
        }

  proto:lint:
    deps: [ install-buf, proto:install-plugins ]
    desc: –ü—Ä–æ–≤–µ—Ä–∫–∞ .proto-—Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∏–ª—é
    dir: shared/proto
    cmds:
      - '{{.BUF}} lint'

  proto:gen:
    deps: [ install-buf, proto:install-plugins, proto:lint ]
    desc: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Go-–∫–æ–¥–∞ –∏–∑ .proto
    dir: shared/proto
    cmds:
      - '{{.BUF}} generate'

  grpcurl:install:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç grpcurl –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.GRPCURL}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º grpcurl {{.GRPCURL_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/fullstorydev/grpcurl/cmd/grpcurl@{{.GRPCURL_VERSION}}
        }
    status:
      - test -x {{.GRPCURL}}

  up-core:
    desc: –ü–æ–¥–Ω—è—Ç—å core –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    dir: deploy/compose/core
    cmds:
      - echo "[task] üöÄ –ü–æ–¥–Ω–∏–º–∞–µ–º core –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
      - docker compose up --build --detach

  down-core:
    desc: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å core –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    dir: deploy/compose/core
    cmds:
      - echo "[task] üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º core –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
      - docker compose down --volumes

  up-ufo:
    desc: –ü–æ–¥–Ω—è—Ç—å UFO —Å–µ—Ä–≤–∏—Å –∏ –≤—Å–µ –µ–≥–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    dir: deploy/compose/ufo
    cmds:
      - echo "[task] üì¶ –ü–æ–¥–Ω–∏–º–∞–µ–º UFO —Å–µ—Ä–≤–∏—Å —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
      - docker compose up --build --detach

  down-ufo:
    desc: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å UFO —Å–µ—Ä–≤–∏—Å –∏ –≤—Å–µ –µ–≥–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    dir: deploy/compose/ufo
    cmds:
      - echo "[task] üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UFO —Å–µ—Ä–≤–∏—Å —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
      - docker compose down --volumes

  up-all:
    desc: –ü–æ–¥–Ω—è—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏ –≤–º–µ—Å—Ç–µ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
    cmds:
      - task up-core
      - task up-ufo

  down-all:
    desc: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏ –≤–º–µ—Å—Ç–µ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
    cmds:
      - task down-core
      - task down-ufo

  # === gRPC —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ grpcurl ===

  grpc:test:create:
    desc: "–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –ù–õ–û"
    deps: [ grpcurl:install ]
    cmds:
      - echo "üõ∏ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ù–õ–û..."
      - |
        {{.GRPCURL}} -plaintext -d '{
          "info": {
            "observed_at": "2024-01-15T20:30:00Z",
            "location": "–ú–æ—Å–∫–≤–∞, –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å",
            "description": "–Ø—Ä–∫–∏–π —Å–≤–µ—Ç—è—â–∏–π—Å—è –æ–±—ä–µ–∫—Ç —Ç—Ä–µ—É–≥–æ–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã",
            "color": "–∑–µ–ª–µ–Ω—ã–π",
            "sound": false,
            "duration_seconds": 120
          }
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Create

  grpc:test:get:
    desc: "–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –ù–õ–û –ø–æ UUID"
    deps: [ grpcurl:install ]
    cmds:
      - echo "üîç –ü–æ–ª—É—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ù–õ–û –ø–æ UUID..."
      - echo "‚ö†Ô∏è  –ó–∞–º–µ–Ω–∏—Ç–µ UUID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ Create:"
      - |
        {{.GRPCURL}} -plaintext -d '{
          "uuid": "REPLACE_WITH_REAL_UUID"
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Get

  grpc:test:update:
    desc: "–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –ù–õ–û"
    deps: [ grpcurl:install ]
    cmds:
      - echo "‚úèÔ∏è  –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ù–õ–û..."
      - echo "‚ö†Ô∏è  –ó–∞–º–µ–Ω–∏—Ç–µ UUID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ Create:"
      - |
        {{.GRPCURL}} -plaintext -d '{
          "uuid": "REPLACE_WITH_REAL_UUID",
          "update_info": {
            "location": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –î–≤–æ—Ä—Ü–æ–≤–∞—è –ø–ª–æ—â–∞–¥—å",
            "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: –æ–±—ä–µ–∫—Ç –∏–∑–º–µ–Ω–∏–ª —Ñ–æ—Ä–º—É",
            "color": "—Å–∏–Ω–∏–π",
            "duration_seconds": 180
          }
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Update

  grpc:test:delete:
    desc: "–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –ù–õ–û"
    deps: [ grpcurl:install ]
    cmds:
      - echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ù–õ–û (–º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ)..."
      - echo "‚ö†Ô∏è  –ó–∞–º–µ–Ω–∏—Ç–µ UUID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ Create:"
      - |
        {{.GRPCURL}} -plaintext -d '{
          "uuid": "REPLACE_WITH_REAL_UUID"
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Delete

  grpc:test:all:
    desc: "–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è gRPC API"
    deps: [ grpcurl:install ]
    cmds:
      - echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è UFO gRPC API..."
      - echo ""
      - echo "üõ∏ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ..."
      - |
        UUID=$({{.GRPCURL}} -plaintext -d '{
          "info": {
            "observed_at": "2024-01-15T20:30:00Z",
            "location": "–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è",
            "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç gRPC API",
            "color": "–∫—Ä–∞—Å–Ω—ã–π",
            "sound": true,
            "duration_seconds": 60
          }
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Create | grep '"uuid"' | cut -d'"' -f4)
        
        if [ -n "$UUID" ]; then
          echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ —Å UUID: $UUID"
          
          echo ""
          echo "üîç –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ..."
          {{.GRPCURL}} -plaintext -d "{\"uuid\": \"$UUID\"}" {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Get
          
          echo ""
          echo "‚úèÔ∏è  –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ..."
          {{.GRPCURL}} -plaintext -d "{
            \"uuid\": \"$UUID\",
            \"update_info\": {
              \"description\": \"–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –∞–≤—Ç–æ—Ç–µ—Å—Ç\",
              \"color\": \"—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π\"
            }
          }" {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Update
          
          echo ""
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ..."
          {{.GRPCURL}} -plaintext -d "{\"uuid\": \"$UUID\"}" {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Get
          
          echo ""
          echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ..."
          {{.GRPCURL}} -plaintext -d "{\"uuid\": \"$UUID\"}" {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Delete
          
          echo ""
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ (–¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å deleted_at)..."
          {{.GRPCURL}} -plaintext -d "{\"uuid\": \"$UUID\"}" {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Get
          
          echo ""
          echo "‚úÖ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω!"
        else
          echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ"
          exit 1
        fi

  env:install-envsubst:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç envsubst –¥–ª—è –∑–∞–º–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    cmds:
      - |
        [ -f {{.ENVSUBST}} ] || {
          echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º envsubst –≤–µ—Ä—Å–∏–∏ {{.ENVSUBST_VERSION}}..."
          GOBIN={{.BIN_DIR}} go install github.com/a8m/envsubst/cmd/envsubst@{{.ENVSUBST_VERSION}}
        }
        echo "‚úÖ envsubst —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {{.ENVSUBST}}"

  env:generate:
    desc: "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç .env —Ñ–∞–π–ª—ã –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤ –∏ –µ–¥–∏–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    deps: [ env:install-envsubst ]
    cmds:
      - |
        ENV_FILE="{{.ENVDIR}}/.env"
        TEMPLATE_FILE="{{.ENVDIR}}/.env.template"
        SCRIPT="{{.ENVDIR}}/generate-env.sh"
        
        if [ ! -f "$ENV_FILE" ]; then
          if [ -f "$TEMPLATE_FILE" ]; then
            echo "üîÑ –§–∞–π–ª $ENV_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∏–∑ —à–∞–±–ª–æ–Ω–∞ $TEMPLATE_FILE"
            cp "$TEMPLATE_FILE" "$ENV_FILE"
            echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª $ENV_FILE. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
          else
            echo "‚ùå –®–∞–±–ª–æ–Ω $TEMPLATE_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
          fi
        fi
        
        chmod +x "$SCRIPT"
        # –ü–µ—Ä–µ–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏-–∑–∞–ø—è—Ç—ã–º–∏
        export SERVICES="{{.SERVICES}}"
        export ENV_FILE="$ENV_FILE"
        ENV_SUBST={{.ENVSUBST}} "$SCRIPT" services

  env:generate-monitoring:
    desc: "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤"
    deps: [ env:install-envsubst ]
    cmds:
      - |
        SCRIPT="{{.ENVDIR}}/generate-env.sh"
        ENV_FILE="{{.COMPOSE_DIR}}/core/.env"
        
        chmod +x "$SCRIPT"
        export ENV_FILE="$ENV_FILE"
        ENV_SUBST={{.ENVSUBST}} "$SCRIPT" monitoring

  env:generate-all:
    desc: "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (.env –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∫–æ–Ω—Ñ–∏–≥–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)"
    cmds:
      - task: env:generate
      - task: env:generate-monitoring
      - echo "üéâ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã"

  # === –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–π—Å–∏–Ω–≥–∞ ===

  tracing:test:create-triangle:
    desc: "–°–æ–∑–¥–∞–µ—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞"
    deps: [ grpcurl:install ]
    cmds:
      - echo "üõ∏ –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ—É–≥–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞..."
      - |
        {{.GRPCURL}} -plaintext -d '{
          "info": {
            "observed_at": "2024-01-15T21:00:00Z",
            "location": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
            "description": "–ë–æ–ª—å—à–æ–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç",
            "color": "–∫—Ä–∞—Å–Ω—ã–π",
            "sound": false,
            "duration_seconds": 600
          }
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Create

  tracing:test:create-saucer:
    desc: "–°–æ–∑–¥–∞–µ—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π —Ç–∞—Ä–µ–ª–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞"
    deps: [ grpcurl:install ]
    cmds:
      - echo "üõ∏ –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é —Ç–∞—Ä–µ–ª–∫—É –¥–ª—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞..."
      - |
        {{.GRPCURL}} -plaintext -d '{
          "info": {
            "observed_at": "2024-01-15T22:00:00Z",
            "location": "–ú–æ—Å–∫–≤–∞",
            "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ª–µ—Ç–∞—é—â–∞—è —Ç–∞—Ä–µ–ª–∫–∞ –≤ —Ñ–æ—Ä–º–µ –¥–∏—Å–∫–∞",
            "color": "–±–µ–ª—ã–π",
            "sound": true,
            "duration_seconds": 180
          }
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Create

  tracing:test:analyze:
    desc: "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ø–æ UUID (—Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É —Ç—Ä–µ–π—Å–æ–≤)"
    deps: [ grpcurl:install ]
    cmds:
      - echo "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ (–∑–∞–º–µ–Ω–∏—Ç–µ UUID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)..."
      - echo "‚ö†Ô∏è  –ó–∞–º–µ–Ω–∏—Ç–µ UUID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ Create:"
      - |
        {{.GRPCURL}} -plaintext -d '{
          "uuid": "REPLACE_WITH_REAL_UUID"
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/AnalyzeSighting

  tracing:test:full-cycle:
    desc: "–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞: —Å–æ–∑–¥–∞–Ω–∏–µ + –∞–Ω–∞–ª–∏–∑"
    deps: [ grpcurl:install ]
    cmds:
      - echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞..."
      - echo ""
      - echo "üõ∏ –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ—É–≥–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç..."
      - |
        UUID1=$({{.GRPCURL}} -plaintext -d '{
          "info": {
            "observed_at": "2024-01-15T21:00:00Z",
            "location": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
            "description": "–ë–æ–ª—å—à–æ–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç",
            "color": "–∫—Ä–∞—Å–Ω—ã–π",
            "sound": false,
            "duration_seconds": 600
          }
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Create | grep '"uuid"' | cut -d'"' -f4)
        
        if [ -n "$UUID1" ]; then
          echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ç—Ä–µ—É–≥–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å UUID: $UUID1"
          echo ""
          echo "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç—Ä–µ—É–≥–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç..."
          {{.GRPCURL}} -plaintext -d "{\"uuid\": \"$UUID1\"}" {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/AnalyzeSighting
        fi
        
        echo ""
        echo "üõ∏ –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é —Ç–∞—Ä–µ–ª–∫—É..."
        UUID2=$({{.GRPCURL}} -plaintext -d '{
          "info": {
            "observed_at": "2024-01-15T22:00:00Z",
            "location": "–ú–æ—Å–∫–≤–∞",
            "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ª–µ—Ç–∞—é—â–∞—è —Ç–∞—Ä–µ–ª–∫–∞ –≤ —Ñ–æ—Ä–º–µ –¥–∏—Å–∫–∞",
            "color": "–±–µ–ª—ã–π",
            "sound": true,
            "duration_seconds": 180
          }
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Create | grep '"uuid"' | cut -d'"' -f4)
        
        if [ -n "$UUID2" ]; then
          echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ç–∞—Ä–µ–ª–∫–∞ —Å UUID: $UUID2"
          echo ""
          echo "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é —Ç–∞—Ä–µ–ª–∫—É..."
          {{.GRPCURL}} -plaintext -d "{\"uuid\": \"$UUID2\"}" {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/AnalyzeSighting
        fi
        
        echo ""
        echo "üõ∏ –°–æ–∑–¥–∞–µ–º —Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–π –æ–±—ä–µ–∫—Ç..."
        UUID3=$({{.GRPCURL}} -plaintext -d '{
          "info": {
            "observed_at": "2024-01-15T23:00:00Z",
            "location": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
            "description": "–°–≤–µ—Ç—è—â–∏–π—Å—è —Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–π –æ–±—ä–µ–∫—Ç",
            "color": "–æ—Ä–∞–Ω–∂–µ–≤—ã–π",
            "sound": false,
            "duration_seconds": 45
          }
        }' {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/Create | grep '"uuid"' | cut -d'"' -f4)
        
        if [ -n "$UUID3" ]; then
          echo "‚úÖ –°–æ–∑–¥–∞–Ω —Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–π –æ–±—ä–µ–∫—Ç —Å UUID: $UUID3"
          echo ""
          echo "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–π –æ–±—ä–µ–∫—Ç..."
          {{.GRPCURL}} -plaintext -d "{\"uuid\": \"$UUID3\"}" {{.GRPC_SERVER_ADDR}} ufo.v1.UFOService/AnalyzeSighting
        fi
        
        echo ""
        echo "‚úÖ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!"
        echo "üîó –û—Ç–∫—Ä–æ–π—Ç–µ Jaeger UI: http://localhost:16686"
        echo "üîç –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å 'ufo-service' –∏ –Ω–∞–π–¥–∏—Ç–µ —Ç—Ä–µ–π—Å—ã"

  tracing:check-services:
    desc: "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ Jaeger"
    cmds:
      - echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –≤ Jaeger..."
      - |
        if curl -s http://localhost:16686/api/services > /dev/null; then
          echo "‚úÖ Jaeger –¥–æ—Å—Ç—É–ø–µ–Ω"
          echo "üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
          curl -s http://localhost:16686/api/services | jq -r '.data[]' 2>/dev/null || curl -s http://localhost:16686/api/services
        else
          echo "‚ùå Jaeger –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:16686"
          echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: task up-all"
        fi

  tracing:open-jaeger:
    desc: "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç Jaeger UI –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
    cmds:
      - echo "üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º Jaeger UI..."
      - |
        open http://localhost:16686 || echo "üí° –û—Ç–∫—Ä–æ–π—Ç–µ –≤—Ä—É—á–Ω—É—é: http://localhost:16686"
