version: '3'

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
vars:
  GO_VERSION: '1.24'
  GOLANGCI_LINT_VERSION: 'v2.1.5'
  GCI_VERSION: 'v0.13.6'
  GOFUMPT_VERSION: 'v0.8.0'
  BUF_VERSION: '1.53.0'
  PROTOC_GEN_GO_VERSION: 'v1.36.6'
  PROTOC_GEN_GO_GRPC_VERSION: 'v1.5.1'
  GRPCURL_VERSION: 'v1.9.3'

  BIN_DIR: '{{.ROOT_DIR}}/bin'
  GOLANGCI_LINT: '{{.BIN_DIR}}/golangci-lint'
  GCI: '{{.BIN_DIR}}/gci'
  GOFUMPT: '{{.BIN_DIR}}/gofumpt'
  BUF: '{{.BIN_DIR}}/buf'
  PROTOC_GEN_GO: '{{.BIN_DIR}}/protoc-gen-go'
  PROTOC_GEN_GO_GRPC: '{{.BIN_DIR}}/protoc-gen-go-grpc'
  GRPCURL: '{{.BIN_DIR}}/grpcurl'

tasks:
  install-formatters:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã gci –∏ gofumpt –≤ ./bin"
    cmds:
      - |
        [ -f {{.GOFUMPT}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gofumpt {{.GOFUMPT_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install mvdan.cc/gofumpt@{{.GOFUMPT_VERSION}}
        }
        [ -f {{.GCI}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gci {{.GCI_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/daixiang0/gci@{{.GCI_VERSION}}
        }
    status:
      - test -x {{.GOFUMPT}}
      - test -x {{.GCI}}

  format:
    desc: "–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç gofumpt + gci"
    deps: [ install-formatters ]
    cmds:
      - |
        echo "üßº –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ gofumpt ..."
        find . -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GOFUMPT}} -extra -w {} +
      - |
        echo "üéØ –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã —á–µ—Ä–µ–∑ gci ..."
        find . -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GCI}} write -s standard -s default -s "prefix(github.com/olezhek28/microservices-course-examples/)" {} +

  install-golangci-lint:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç golangci-lint –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.GOLANGCI_LINT}} ] || {
          mkdir -p {{.BIN_DIR}}
          echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º golangci-lint {{.GOLANGCI_LINT_VERSION}}..."
          GOBIN={{.BIN_DIR}} go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@{{.GOLANGCI_LINT_VERSION}}
        }
    status:
      - test -x {{.GOLANGCI_LINT}}

  lint:
    desc: "–ó–∞–ø—É—Å–∫–∞–µ—Ç golangci-lint –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"
    deps: [ install-golangci-lint ]
    cmds:
      - '{{.GOLANGCI_LINT}} run ./... --config=.golangci.yml'

  install-buf:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Buf –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        mkdir -p {{.BIN_DIR}}
        [ -f {{.BUF}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º buf {{.BUF_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/bufbuild/buf/cmd/buf@v{{.BUF_VERSION}}
        }
    status:
      - test -x {{.BUF}}

  proto:install-plugins:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç protoc –ø–ª–∞–≥–∏–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.PROTOC_GEN_GO}} ] || {
          echo 'üì¶ Installing protoc-gen-go...'
          GOBIN={{.BIN_DIR}} go install google.golang.org/protobuf/cmd/protoc-gen-go@{{.PROTOC_GEN_GO_VERSION}}
        }
        [ -f {{.PROTOC_GEN_GO_GRPC}} ] || {
          echo 'üì¶ Installing protoc-gen-go-grpc...'
          GOBIN={{.BIN_DIR}} go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@{{.PROTOC_GEN_GO_GRPC_VERSION}}
        }

  proto:lint:
    deps: [ install-buf, proto:install-plugins ]
    desc: –ü—Ä–æ–≤–µ—Ä–∫–∞ .proto-—Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∏–ª—é
    dir: proto
    cmds:
      - '{{.BUF}} lint'

  proto:gen:
    deps: [ install-buf, proto:install-plugins, proto:lint ]
    desc: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Go-–∫–æ–¥–∞ –∏–∑ .proto
    dir: proto
    cmds:
      - '{{.BUF}} generate'

  grpcurl:install:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç grpcurl –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.GRPCURL}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º grpcurl {{.GRPCURL_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/fullstorydev/grpcurl/cmd/grpcurl@{{.GRPCURL_VERSION}}
        }
    status:
      - test -x {{.GRPCURL}}

  test:
    desc: "–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —Ä—É—á–∫–∏ JWT —Å–µ—Ä–≤–∏—Å–∞ —á–µ—Ä–µ–∑ grpcurl"
    deps: [ grpcurl:install ]
    cmds:
      - |
        echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º JWT —Å–µ—Ä–≤–∏—Å..."
        echo ""
        echo "1Ô∏è‚É£ –õ–æ–≥–∏–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º admin..."
        RESPONSE=$({{.GRPCURL}} -plaintext -d '{
          "username": "admin",
          "password": "admin123"
        }' localhost:50051 jwt.v1.JWTService/Login)
        echo "$RESPONSE"
        echo ""
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º refresh —Ç–æ–∫–µ–Ω –∏–∑ –æ—Ç–≤–µ—Ç–∞
        REFRESH_TOKEN=$(echo "$RESPONSE" | grep -o '"refreshToken": "[^"]*"' | cut -d'"' -f4)
        
        if [ -n "$REFRESH_TOKEN" ]; then
          echo "2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π access —Ç–æ–∫–µ–Ω..."
          {{.GRPCURL}} -plaintext -d "{
            \"refresh_token\": \"$REFRESH_TOKEN\"
          }" localhost:50051 jwt.v1.JWTService/GetAccessToken
          echo ""
          
          echo "3Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π refresh —Ç–æ–∫–µ–Ω..."
          {{.GRPCURL}} -plaintext -d "{
            \"refresh_token\": \"$REFRESH_TOKEN\"
          }" localhost:50051 jwt.v1.JWTService/GetRefreshToken
        else
          echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å refresh —Ç–æ–∫–µ–Ω"
        fi

  test:login:
    desc: "–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–Ω –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    deps: [ grpcurl:install ]
    cmds:
      - |
        echo "üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
        echo ""
        
        echo "üë§ admin:admin123"
        {{.GRPCURL}} -plaintext -d '{"username": "admin", "password": "admin123"}' localhost:50051 jwt.v1.JWTService/Login | head -3
        echo ""
        
        echo "üë§ user1:password1"
        {{.GRPCURL}} -plaintext -d '{"username": "user1", "password": "password1"}' localhost:50051 jwt.v1.JWTService/Login | head -3
        echo ""
        
        echo "üë§ user2:password2"
        {{.GRPCURL}} -plaintext -d '{"username": "user2", "password": "password2"}' localhost:50051 jwt.v1.JWTService/Login | head -3
        echo ""
        
        echo "üë§ john:john123"
        {{.GRPCURL}} -plaintext -d '{"username": "john", "password": "john123"}' localhost:50051 jwt.v1.JWTService/Login | head -3
        echo ""
        
        echo "üë§ alice:alice456"
        {{.GRPCURL}} -plaintext -d '{"username": "alice", "password": "alice456"}' localhost:50051 jwt.v1.JWTService/Login | head -3

  test:fail:
    desc: "–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏, –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)"
    deps: [ grpcurl:install ]
    cmds:
      - |
        echo "‚ùå –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏..."
        echo ""
        
        echo "üîí –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è admin:"
        {{.GRPCURL}} -plaintext -d '{"username": "admin", "password": "wrongpassword"}' localhost:50051 jwt.v1.JWTService/Login || true
        echo ""
        
        echo "üëª –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:"
        {{.GRPCURL}} -plaintext -d '{"username": "nonexistent", "password": "test123"}' localhost:50051 jwt.v1.JWTService/Login || true
        echo ""
        
        echo "üìù –ü—É—Å—Ç—ã–µ –ø–æ–ª—è:"
        {{.GRPCURL}} -plaintext -d '{"username": "", "password": ""}' localhost:50051 jwt.v1.JWTService/Login || true
        echo ""
        
        echo "üîë –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π refresh —Ç–æ–∫–µ–Ω:"
        {{.GRPCURL}} -plaintext -d '{"refresh_token": "invalid.token.here"}' localhost:50051 jwt.v1.JWTService/GetAccessToken || true
        echo ""
        
        echo "üîÑ –ü—É—Å—Ç–æ–π refresh —Ç–æ–∫–µ–Ω:"
        {{.GRPCURL}} -plaintext -d '{"refresh_token": ""}' localhost:50051 jwt.v1.JWTService/GetRefreshToken || true

  test:all:
    desc: "–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã: –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏"
    deps: [ grpcurl:install ]
    cmds:
      - task test:login
      - echo ""
      - task test
      - echo ""
      - task test:fail

