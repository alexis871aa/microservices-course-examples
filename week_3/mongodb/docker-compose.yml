services:
  mongodb:
    image: mongo:7.0.5 # Образ MongoDB версии 7.0.5
    container_name: my_mongo # Имя контейнера базы данных
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME} # Логин для MongoDB из .env
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD} # Пароль для MongoDB из .env
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE} # Создаем базу данных при инициализации
    ports:
      - "${MONGO_PORT}:27017" # Пробрасываем порт: внешний из .env, внутренний фиксированный
    volumes:
      - mongodata:/data/db # Volume для сохранности данных базы
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "echo 'db.runCommand({ ping: 1 }).ok' | mongosh --quiet -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase ${MONGO_AUTH_DB}",
        ]
      # Проверка готовности MongoDB: выполняем команду ping через mongosh с указанием логина и пароля
      # --quiet отключает лишний вывод, чтобы результатом был только "1" при успехе
      interval: 10s # Запускаем проверку каждые 10 секунд
      timeout: 5s # Максимальное время ожидания выполнения ping-команды
      retries: 5 # После 5 неудачных проверок подряд контейнер считается "неработоспособным"

    restart: unless-stopped # Автоматический перезапуск контейнера, кроме ручной остановки
    networks:
      - app-network

networks:
  app-network:
    driver: bridge # Обычная bridge-сеть Docker

volumes:
  mongodata: # Volume для данных базы, Docker создаст его автоматически 